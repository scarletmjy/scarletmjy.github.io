<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>操作系统主要知识点梳理</title>
    <link href="/archives/e3cfdb9.html"/>
    <url>/archives/e3cfdb9.html</url>
    
    <content type="html"><![CDATA[<p>参考书目：《操作系统：精髓与设计原理》</p><a id="more"></a><h2 id="第2章-操作系统概述"><a href="#第2章-操作系统概述" class="headerlink" title="第2章 操作系统概述"></a>第2章 操作系统概述</h2><h3 id="2-1-操作系统的功能"><a href="#2-1-操作系统的功能" class="headerlink" title="2.1 操作系统的功能"></a>2.1 操作系统的功能</h3><ol><li>作为用户和计算机之间的接口，提供以下几种服务：<ul><li>程序开发</li><li>程序运行</li><li>I/O设备访问</li><li>文件访问控制</li><li>系统访问</li><li>错误检测和相应</li><li>记账：资源利用率等统计数据</li></ul></li><li>作为资源管理器</li></ol><h3 id="2-2-操作系统的发展史"><a href="#2-2-操作系统的发展史" class="headerlink" title="2.2 操作系统的发展史"></a>2.2 操作系统的发展史</h3><ol><li>串行处理</li><li>简单批处理系统</li><li>多道批处理系统</li><li>分时系统：时间片技术</li></ol><h3 id="2-3-操作系统的4个重要理论进展"><a href="#2-3-操作系统的4个重要理论进展" class="headerlink" title="2.3 操作系统的4个重要理论进展"></a>2.3 操作系统的4个重要理论进展</h3><ol><li>进程：<ul><li>一个正在执行的程序</li><li>一个正在计算机上执行的程序实例</li><li>能分配给处理器并由处理器执行的实体</li><li>由一组执行的指令、一个当前状态和一组相关的系统资源表征的活动单元</li></ul></li><li>内存管理：虚存</li><li>信息保护和安全：可用性、保密性、数据完整性、认证（用户身份、数据合法性）</li><li>调度和资源管理</li></ol><h3 id="2-4-现代操作系统的特性"><a href="#2-4-现代操作系统的特性" class="headerlink" title="2.4 现代操作系统的特性"></a>2.4 现代操作系统的特性</h3><ol><li>并发（concurrency）：多个事件在同一时间间隔内发生，宏观上并发，微观上交替执行，并发指的是进程。区别于并行（parallelism）：多个事件在同一时刻发生。</li><li>共享（sharing）：多个进程共享有限的计算机系统资源。互斥共享。</li><li>异步性（asynchronism）：程序执行顺序和执行时间的不确定性。难以重现系统在某个时刻的状态。</li><li>虚拟（virtual）：一个物理实体映射为若干个对应的逻辑实体。</li></ol><h3 id="2-5-操作系统提供的用户接口"><a href="#2-5-操作系统提供的用户接口" class="headerlink" title="2.5 操作系统提供的用户接口"></a>2.5 操作系统提供的用户接口</h3><ol><li>程序接口：系统调用<ul><li>OS提供给软件开发人员的唯一接口，利用它使用系统功能</li><li>功能：设备管理、文件管理、进程控制、进程通信、存储管理、系统管理</li><li>和函数调用的相同点：<ul><li>改变指令流程</li><li>重复执行和公用</li><li>改变指令流程后需要返回原处</li></ul></li><li>和函数调用的不同点：<ul><li>系统调用是动态调用，函数调用是静态调用<ul><li>系统调用不包含被调用的代码，调用地址和返回地址不固定。通过功能号、压栈出栈来确定调用地址和返回地址</li><li>函数调用的被调用代码和调用代码在同一程序内。调用地址固定，包含在调用语句中；返回地址不固定，通过栈保存。</li></ul></li><li>执行状态不同：系统调用在核心态</li><li>进入方式不同：用int或trap进行系统调用，用call或jmp进行过程调用</li><li>与进程调度的关系不同：采用抢占式调度的系统，在系统调用返回时要进行重新调度的检查，看是否有更高优先级的任务就绪</li><li>嵌套、递归调用：系统调用一般不允许</li></ul></li></ul></li><li>作业接口：系统命令</li></ol><h2 id="第3章-进程"><a href="#第3章-进程" class="headerlink" title="第3章 进程"></a>第3章 进程</h2><h3 id="3-1-什么是进程"><a href="#3-1-什么是进程" class="headerlink" title="3.1 什么是进程"></a>3.1 什么是进程</h3><ol><li>进程的定义：可并发执行的程序在某个数据集合的一次计算活动，是操作系统进行资源分配和保护的基本单位。</li><li>进程的元素：<ul><li>程序代码</li><li>数据集合</li><li>PCB（进程控制块）：描述进程状态的一些属性：<ul><li>标识符：用于区分其他进程</li><li>状态：运行态等</li><li>优先级</li><li>程序计数器</li><li>内存指针</li><li>上下文数据：寄存器中的数据</li><li>I/O状态信息：显式I/O请求、分配给进程的I/O设备等</li><li>记账信息：处理器时间总和、时钟组合等</li></ul></li></ul></li><li>进程控制块：用于记录和刻画进程状态及有关信息的数据结构。由OS创建管理，是系统感知进程存在的唯一标志，和进程一一对应。</li></ol><h3 id="3-2-进程状态"><a href="#3-2-进程状态" class="headerlink" title="3.2 进程状态"></a>3.2 进程状态</h3><ol><li>进程的创建：<ul><li>新的批处理作业</li><li>终端用户登录OS</li><li>为提供服务由OS创建</li><li>现有进程派生</li></ul></li><li>进程的终止：正常完成、超时、错误、父进程终止等</li><li>七状态模型：<ul><li>运行态</li><li>就绪态：进程已在内存中并可以执行</li><li>新建态</li><li>退出态</li><li>阻塞态：进程在内存中并等待一个事件</li><li>阻塞/挂起态：进程在外存中并等待一个事件</li><li>就绪/挂起态：进程在外存中，但只要载入内存就可执行</li></ul></li><li>七状态模型的状态转换：<ul><li>阻塞-阻塞/挂起：若没有就绪进程，则至少换出一个阻塞进程，为未阻塞进程腾出空间；就绪进程需要更多的内存空间，挂起一个阻塞进程</li><li></li></ul></li></ol><center><img src="/archives/e3cfdb9/3-1.png" class=""></center>]]></content>
    
    
    <categories>
      
      <category>知识</category>
      
    </categories>
    
    
    <tags>
      
      <tag>OS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【OpenJudge】NOI-二分查找-5：派</title>
    <link href="/archives/cd12b808.html"/>
    <url>/archives/cd12b808.html</url>
    
    <content type="html"><![CDATA[<p>二分查找经典题目。</p><a id="more"></a><h4 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h4><p>我的生日要到了！根据习俗，我需要将一些派分给大家。我有N个不同口味、不同大小的派。有F个朋友会来参加我的派对，每个人会拿到一块派（必须一个派的一块，不能由几个派的小块拼成；可以是一整个派）。</p><p>我的朋友们都特别小气，如果有人拿到更大的一块，就会开始抱怨。因此所有人拿到的派是同样大小的（但不需要是同样形状的），虽然这样有些派会被浪费，但总比搞砸整个派对好。当然，我也要给自己留一块，而这一块也要和其他人的同样大小。</p><p>请问我们每个人拿到的派最大是多少？每个派都是一个高为1，半径不等的圆柱体。</p><h4 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h4><p>第一行包含两个正整数N和F，1 ≤ N, F ≤ 10 000，表示派的数量和朋友的数量。<br>第二行包含N个1到10000之间的整数，表示每个派的半径。</p><h4 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h4><p>输出每个人能得到的最大的派的体积，精确到小数点后三位。</p><h4 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3 3</span><br><span class="line">4 3 3</span><br></pre></td></tr></table></figure><h4 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">25.133</span><br></pre></td></tr></table></figure><p>WA数次之后发现是精度问题。AC代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line">pai=[]</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cal</span><span class="params">(x,n)</span>:</span></span><br><span class="line">    ans=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(n):</span><br><span class="line">        ans+=pai[i]//x</span><br><span class="line">    <span class="keyword">return</span> ans</span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</span><br><span class="line">    n,f = map(int,input().split())</span><br><span class="line">    f += <span class="number">1</span></span><br><span class="line">    pai=list(map(int,input().split()))</span><br><span class="line">    low=<span class="number">0</span></span><br><span class="line">    high=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(n):</span><br><span class="line">        pai[i]=math.pi*pai[i]*pai[i]</span><br><span class="line">        <span class="keyword">if</span> pai[i]&gt;high:</span><br><span class="line">            high=pai[i]</span><br><span class="line">    <span class="keyword">while</span>(abs(high-low)&gt;=<span class="number">1e-5</span>): </span><br><span class="line">        mid = low+(high-low)/<span class="number">2</span> </span><br><span class="line">        num = cal(mid,n)    <span class="comment">#计算派的个数</span></span><br><span class="line">        <span class="keyword">if</span> num&gt;=f:</span><br><span class="line">            low=mid</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            high=mid</span><br><span class="line">    print(<span class="string">'%.3f'</span> % high)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>二分法</tag>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>yilia主题配置方案（持续更新）</title>
    <link href="/archives/f04dc526.html"/>
    <url>/archives/f04dc526.html</url>
    
    <content type="html"><![CDATA[<p>博客的基本信息，如站点名称、博主信息等基本上都可以在根目录下的<code>_config.yml</code>以及<code>themes/yilia/_config.yml</code>中完成，这里就不赘述了，下面介绍一些不太容易实现的配置（至少让我折腾了一会）。</p><a id="more"></a><h3 id="1-头像-amp-amp-网页图标等图像设置"><a href="#1-头像-amp-amp-网页图标等图像设置" class="headerlink" title="1. 头像&amp;&amp;网页图标等图像设置"></a>1. 头像&amp;&amp;网页图标等图像设置</h3><p>在 <code>themes/yilia/source/</code> 路径下，添加一个 <code>assets</code> 文件夹，里面存放各种资源。我把图像资源放在<code>img</code>文件夹中。</p><p>在 <code>themes/yilia/_config.yml</code>文件中，做如下修改：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># wx、zfb二维码图片</span></span><br><span class="line"><span class="attr">weixin:</span>  <span class="string">/assets/img/[image</span> <span class="string">name].png</span></span><br><span class="line"><span class="attr">alipay:</span>  <span class="string">/assets/img/[image</span> <span class="string">name].png</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 头像图片</span></span><br><span class="line"><span class="attr">avatar:</span>  <span class="string">/assets/img/[image</span> <span class="string">name].png</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 网页图标</span></span><br><span class="line"><span class="attr">favicon:</span> <span class="string">/assets/img/[image</span> <span class="string">name].png</span></span><br></pre></td></tr></table></figure><h3 id="2-博文中插入图片"><a href="#2-博文中插入图片" class="headerlink" title="2. 博文中插入图片"></a>2. 博文中插入图片</h3><p>比较奇怪的是插入图片的markdown语法在这里不起作用，图片加载不出来。几番搜索之后终于找到了解决方案：</p><p>首先找到项目根目录的<code>_config.yml</code>文件,修改post_asset_folder为true：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>接着在命令行cd到博客项目所在文件夹下，输入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo n 博客名 #或hexo new</span><br></pre></td></tr></table></figure><p>该命令会生成一个markdown文件和同名的文件夹，我们只需要将图片放进文件夹里，然后在md文件里使用下面的语句来插入图片即可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset_img 图片名.图片后缀 [title] %&#125;</span><br></pre></td></tr></table></figure><p>然后hexo g生成文件hexo s启动服务，就可以看到图片了。<br>需要注意的是如果之前安装过hexo-asset-image，需要将其卸载：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-asset-image --save</span><br></pre></td></tr></table></figure><h3 id="3-创建分类页面"><a href="#3-创建分类页面" class="headerlink" title="3. 创建分类页面"></a>3. 创建分类页面</h3><p>在命令行cd到博客项目所在文件夹下，输入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure><p>该命令将在<code>source</code>目录下生成一个<code>categories</code>文件夹，里面有一个index.md文件。修改该文件为：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">文章分类</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018</span><span class="number">-06</span><span class="number">-11</span> <span class="number">10</span><span class="string">:13:21</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">"categories"</span></span><br><span class="line"><span class="attr">comments:</span> <span class="literal">false</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p>然后进行修改categories页面样式的操作。打开<code>yilia\source\main.0cf68a.css</code>，将下面的内容添加进去：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">category-all-page</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">30px</span> <span class="number">40px</span> <span class="number">30px</span> <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">min-height</span>: <span class="number">70vh</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.category-all-page</span> <span class="selector-tag">h2</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">20px</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.category-all-page</span> <span class="selector-class">.category-all-title</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.category-all-page</span> <span class="selector-class">.category-all</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.category-all-page</span> <span class="selector-class">.category-list</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.category-all-page</span> <span class="selector-class">.category-list-item-list-item</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">15px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.category-all-page</span> <span class="selector-class">.category-list-item-list-count</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: $grey;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.category-all-page</span> <span class="selector-class">.category-list-item-list-count</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">" ("</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.category-all-page</span> <span class="selector-class">.category-list-item-list-count</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">") "</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.category-all-page</span> <span class="selector-class">.category-list-item</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">10px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.category-all-page</span> <span class="selector-class">.category-list-count</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: $grey;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.category-all-page</span> <span class="selector-class">.category-list-count</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">" ("</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.category-all-page</span> <span class="selector-class">.category-list-count</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">") "</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.category-all-page</span> <span class="selector-class">.category-list-child</span> &#123;</span><br><span class="line">    <span class="attribute">padding-left</span>: <span class="number">10px</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>设置ejs。新建<code>yilia/layout/categories.ejs</code>，输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;article class&#x3D;&quot;article article-type-post show&quot;&gt;</span><br><span class="line">  &lt;header class&#x3D;&quot;article-header&quot; style&#x3D;&quot;border-bottom: 1px solid #ccc&quot;&gt;</span><br><span class="line">  &lt;h1 class&#x3D;&quot;article-title&quot; itemprop&#x3D;&quot;name&quot;&gt;</span><br><span class="line">    &lt;%&#x3D; page.title %&gt;</span><br><span class="line">  &lt;&#x2F;h1&gt;</span><br><span class="line">  &lt;&#x2F;header&gt;</span><br><span class="line"></span><br><span class="line">  &lt;% if (site.categories.length)&#123; %&gt;</span><br><span class="line">  &lt;div class&#x3D;&quot;category-all-page&quot;&gt;</span><br><span class="line">    &lt;h2&gt;共计&amp;nbsp;&lt;%&#x3D; site.categories.length %&gt;&amp;nbsp;个分类&lt;&#x2F;h2&gt;</span><br><span class="line">    &lt;%- list_categories(site.categories, &#123;</span><br><span class="line">      show_count: true,</span><br><span class="line">      class: &#39;category-list-item&#39;,</span><br><span class="line">      style: &#39;list&#39;,</span><br><span class="line">      depth: 2,</span><br><span class="line">      separator: &#39;&#39;</span><br><span class="line">    &#125;) %&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;% &#125; %&gt;</span><br><span class="line">&lt;&#x2F;article&gt;</span><br></pre></td></tr></table></figure><p>至此分类功能设置完成，我们可以在每篇博文中设置categories属性，详情见第4部分。</p><h3 id="4-设置博文信息"><a href="#4-设置博文信息" class="headerlink" title="4. 设置博文信息"></a>4. 设置博文信息</h3><p>在对应的md文件中设置：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="attr">title:</span> <span class="string">postName</span>           <span class="comment">#文章名称，可以任意修改，不会出现在URL中</span></span><br><span class="line"><span class="attr">copyright:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">toc:</span> <span class="literal">true</span>                 <span class="comment">#是否生成目录</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2020</span><span class="number">-11</span><span class="number">-11</span> <span class="number">15</span><span class="string">:30:16</span> <span class="comment">#文章生成时间</span></span><br><span class="line"><span class="attr">categories:</span> <span class="string">example</span>       <span class="comment">#文章分类</span></span><br><span class="line"><span class="attr">tags:</span> <span class="string">[tag1,tag2,tag3]</span>    <span class="comment">#文章标签，可空，多标签请用格式，注意:后面有个空格</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"> <span class="string">文章摘要</span></span><br><span class="line"> <span class="string">&lt;!--</span> <span class="string">more</span> <span class="string">--&gt;</span></span><br><span class="line"> <span class="string">文章正文，主页面中不显示</span></span><br></pre></td></tr></table></figure><p>显示文章摘要还需要注释掉下面的语句，在 <code>themes/yilia/_config.yml</code>文件中。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">excerpt_link:</span> <span class="string">more</span></span><br></pre></td></tr></table></figure><h3 id="5-增加归档菜单，显示所有文章"><a href="#5-增加归档菜单，显示所有文章" class="headerlink" title="5. 增加归档菜单，显示所有文章"></a>5. 增加归档菜单，显示所有文章</h3><p>修改 <code>themes/yilia/_config.yml</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">    主页:  &#x2F;</span><br><span class="line">    归档:  &#x2F;archives&#x2F;index.html</span><br></pre></td></tr></table></figure><h3 id="6-更改代码块样式"><a href="#6-更改代码块样式" class="headerlink" title="6. 更改代码块样式"></a>6. 更改代码块样式</h3><p>打开<code>theme\yilia\source\main.0cf68a.css</code>，搜索 <code>.article-entry .highlight</code>,  定位到红框，调整代码块背景颜色</p><center><img src="/archives/f04dc526/1.png" class=""></center>调整字体颜色：<center><img src="/archives/f04dc526/2.png" class=""></center>### 7. 显示文章目录<p>在 <code>themes/yilia/_config.ym</code>中，将toc的值改为2。这样就可以根据你的md文件里的标题自动生成目录了：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 目录</span></span><br><span class="line"><span class="comment"># 目录设定：0-不显示目录； 1-文章对应的md文件里有toc:true属性，才有目录； 2-所有文章均显示目录</span></span><br><span class="line"><span class="attr">toc:</span> <span class="number">2</span></span><br></pre></td></tr></table></figure><h3 id="8-添加Gitalk评论区"><a href="#8-添加Gitalk评论区" class="headerlink" title="8. 添加Gitalk评论区"></a>8. 添加Gitalk评论区</h3><p><a href="https://anyway1314.cn/post/2ee2703d.html" target="_blank" rel="noopener">参考博客</a></p><h3 id="9-文章URL加密"><a href="#9-文章URL加密" class="headerlink" title="9. 文章URL加密"></a>9. 文章URL加密</h3><p>用命令行安装插件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure><p>修改根目录下的配置文件_config.yml。找到<code>permalink: :year/:month/:day/:title/</code>这一行，将其改为：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">permalink:</span> <span class="string">archives/:abbrlink.html</span></span><br></pre></td></tr></table></figure><p>然后在下面添加：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">abbrlink:</span></span><br><span class="line">  <span class="attr">alg:</span> <span class="string">crc32</span>  <span class="comment"># 算法</span></span><br><span class="line">  <span class="attr">rep:</span> <span class="string">hex</span>    <span class="comment"># 进制</span></span><br></pre></td></tr></table></figure><p><strong>参考：</strong></p><p><a href="https://www.jianshu.com/p/81191bc2cb2d" target="_blank" rel="noopener">记录hexo无法加载图片及修改yilia主题组件</a></p><p><a href="https://blog.csdn.net/lynnbest/article/details/79845944" target="_blank" rel="noopener">Hexo yilia 主题一揽子使用方案</a></p><p><a href="https://blog.csdn.net/dta0502/article/details/89607895?depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-1&utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-1" target="_blank" rel="noopener">Hexo-Yilia进阶笔记</a></p><p><a href="https://blog.csdn.net/qq_40922859/article/details/97035497?depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-6&utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-6" target="_blank" rel="noopener">Yilia主题优化(统计、评论、目录、一言、爱心效果、、、)</a></p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>建站</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>运行java web项目时遇到的问题及解决方法</title>
    <link href="/archives/39560503.html"/>
    <url>/archives/39560503.html</url>
    
    <content type="html"><![CDATA[<p>最近在elipse运行java web项目的时候踩了不少坑，在此记录一下~</p><a id="more"></a><p><strong>配置信息</strong>：</p><p>OS：win10</p><p>IDE：Eclipse Oxygen.3 Release (4.7.3)</p><p>Server：xampp集成框架里的tomcat7</p><h3 id="问题1：端口占用"><a href="#问题1：端口占用" class="headerlink" title="问题1：端口占用"></a>问题1：端口占用</h3><p>在Eclipse里新建了一个Web项目，然而在启动tomcat7.0服务器的时候显示端口被占用。原因是我先在xampp的控制台上开启了tomcat服务器，导致端口被占用。</p><h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><p>在xampp控制台中关闭tomcat服务器。</p><h3 id="问题2：缺少ARP库"><a href="#问题2：缺少ARP库" class="headerlink" title="问题2：缺少ARP库"></a>问题2：缺少ARP库</h3><p>在eclipse中重新开启服务器，又显示错误：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: C:\Program Files\Java\jdk1.7.0_45\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;...(以下都是环境变量)</span><br></pre></td></tr></table></figure><p>原因是缺少tomcat推荐使用apache的APR库。</p><h4 id="解决方法-1"><a href="#解决方法-1" class="headerlink" title="解决方法"></a>解决方法</h4><ol><li>进入页面：<a href="http://archive.apache.org/dist/tomcat/tomcat-connectors/native" target="_blank" rel="noopener">http://archive.apache.org/dist/tomcat/tomcat-connectors/native</a></li><li>我用的是tomcat7，所以选择1.1.33版本</li></ol><center><img src="/archives/39560503/1.png" class=""></center>3. 选择binaries<center><img src="/archives/39560503/2.png" class=""></center>4. 选择框出来的压缩包，点击下载到本地<center><img src="/archives/39560503/3.png" class=""></center>5. 在本地解压缩，然后进入该文件夹下的`bin\x64`目录，将文件`tcnative-1.dll`复制到`C:\WINDOWS\system32`中（如果是32位电脑，复制bin目录下的`tcnative-1.dll`文件即可）<center><img src="/archives/39560503/4.png" class=""></center><h3 id="问题3：部署路径错误"><a href="#问题3：部署路径错误" class="headerlink" title="问题3：部署路径错误"></a>问题3：部署路径错误</h3><p>重新启动服务器，又又报错：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java.lang.IllegalArgumentException: Document base D:\javaee\.metadata\.plugins\org.eclipse.wst.server.core\tmp0\wtpwebapps\testWeb does not exist or is not a readable directory</span><br></pre></td></tr></table></figure><p>这次似乎是路径的问题。</p><h4 id="解决方法-2"><a href="#解决方法-2" class="headerlink" title="解决方法"></a>解决方法</h4><p>直接右键服务器，点击clean即可。</p><center><img src="/archives/39560503/5.png" class=""></center>再次启动，这次终于成功了。<center><img src="/archives/39560503/6.png" class=""></center>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>通过跳板机连接内网服务器</title>
    <link href="/archives/ee8bc031.html"/>
    <url>/archives/ee8bc031.html</url>
    
    <content type="html"><![CDATA[<p>背景：寒假宅在家想做点东西，需要用到学校里的GPU服务器，然而服务器的IP地址是内网IP，在家无法直接访问。正好学校里的另一台服务器有公网IP，所以打算将此服务器作为跳板机，从而访问内网服务器~</p><a id="more"></a><p>设备信息如下：</p><ul><li>本地机系统：win10</li><li>跳板机系统：centos7</li></ul><h3 id="配置免密登录Linux跳板机"><a href="#配置免密登录Linux跳板机" class="headerlink" title="配置免密登录Linux跳板机"></a>配置免密登录Linux跳板机</h3><p>1.在本地机的cmd中输入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen</span><br></pre></td></tr></table></figure><p>生成rsa密钥对。如果一路回车的话，密钥会存放在<code>C:\Users\&lt;用户名&gt;\.ssh</code>目录下，如图所示，红框框选中的id_rsa.pub就是生成的公钥，我们后面需要用到，它上面没有后缀的文件是私钥：</p><center><img src="/archives/ee8bc031/1.png" class=""></center>2.将公钥发送至跳板机，命令格式为：<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp ./id_rsa.pub &lt;跳板机用户名&gt;@&lt;跳板机IP&gt;:~/.ssh/windows_rsa.pub</span><br></pre></td></tr></table></figure><p>3.登录跳板机，然后cd到~/.ssh目录下，新建文件：authorized_keys（之前创建过就不需要了），然后将刚才传上来的公钥导入这个文件里，命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.ssh</span><br><span class="line">touch authorized_keys</span><br><span class="line">cat windows_rsa.pub &gt;&gt; authorized_keys</span><br></pre></td></tr></table></figure><p>4.之后用chmod命令将authorized_keys的权限改为600，.ssh文件夹的权限改为700</p><p>5.最后本地机尝试登录跳板机，成功！</p><center><img src="/archives/ee8bc031/2.png" class=""></center><h3 id="设置SSH隧道"><a href="#设置SSH隧道" class="headerlink" title="设置SSH隧道"></a>设置SSH隧道</h3><p>1.在本地cmd中输入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -N -f -L 6000:&lt;内网服务器ip&gt;:22 -p &lt;跳板机端口22&gt; username@&lt;跳板机ip&gt; -o TCPKeepAlive=yes</span><br></pre></td></tr></table></figure><p>2.隧道打开之后，新打开一个cmd，首次连接输入<code>ssh -v -p 6000 &lt;内网服务器用户名&gt;@localhost</code>，然后输入yes（如果不是首次连接，可以去掉-v参数），就可以进入服务器玩耍了！</p><p>参考：</p><ol><li><a href="https://blog.csdn.net/qq_40451749/article/details/89348799" target="_blank" rel="noopener">windows配置免密登录linux</a></li><li><a href="https://blog.csdn.net/huangbx_tx/article/details/93339715" target="_blank" rel="noopener">ssh隧道解决pycharm跨过跳板机连接服务器问题</a></li></ol>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>网络</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>github+hexo搭建简易博客</title>
    <link href="/archives/23a361ef.html"/>
    <url>/archives/23a361ef.html</url>
    
    <content type="html"><![CDATA[<p>依托第三方github，免费搭建hexo博客。</p><a id="more"></a><h3 id="1-github上创建仓库"><a href="#1-github上创建仓库" class="headerlink" title="1. github上创建仓库"></a>1. github上创建仓库</h3><p>在github上创建个人仓库，仓库名为：[username].github.io  </p><center><img src="/archives/23a361ef/1.png" class=""></center><h3 id="2-软件以及包安装"><a href="#2-软件以及包安装" class="headerlink" title="2. 软件以及包安装"></a>2. 软件以及包安装</h3><ul><li>在本地主机安装nodejs：<a href="https://nodejs.org/zh-cn/" target="_blank" rel="noopener">https://nodejs.org/zh-cn/</a>  </li><li>安装git：<a href="https://git-scm.com/" target="_blank" rel="noopener">https://git-scm.com/</a>  </li><li>打开命令行或git bash，安装hexo:  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure>安装完成之后，可以使用<code>hexo -v</code> 命令检查是否安装成功  </li><li>由于hexo官方源在国外，下载速度较慢，可以先安装cnpm，然后用cnpm命令进行安装：  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure></li></ul><h3 id="3-初始化hexo"><a href="#3-初始化hexo" class="headerlink" title="3. 初始化hexo"></a>3. 初始化hexo</h3><p>新建一个文件夹，该文件夹将作为博客专用文件夹。cd到新建的文件夹目录下，输入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>接着输入下面的指令，自动安装需要的组件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install</span><br></pre></td></tr></table></figure><p>初始化完成后，会有一个默认主题以及一个hello-word的默认文章。可以先生成博客来看一下效果，运行命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo generate #可以简写成 hexo g</span><br><span class="line">hexo server   #可以简写成 hexo s</span><br></pre></td></tr></table></figure><p>然后打开浏览器，在地址栏中输入<code>http://localhost:4000</code> 查看博客    </p><center><img src="/archives/23a361ef/3.png" class=""></center><h3 id="4-安装新的主题"><a href="#4-安装新的主题" class="headerlink" title="4. 安装新的主题"></a>4. 安装新的主题</h3><p>输入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean #清理缓存</span><br><span class="line">git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia</span><br></pre></td></tr></table></figure><p>安装完成之后，修改文件_config.yml的theme为新的主题名称：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">yilia</span></span><br></pre></td></tr></table></figure><p>然后<code>hexo s</code>启动服务器，可以查看新主题长啥样。 </p><h3 id="5-配置ssh"><a href="#5-配置ssh" class="headerlink" title="5. 配置ssh"></a>5. 配置ssh</h3><p>git bash中输入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C "your github email address"</span><br></pre></td></tr></table></figure><p>回车3次，生成密钥之后打开C:\Users\用户名.ssh\id_rsa.pub，复制，然后打开github，打开github的settings界面，点击SSH and GPG keys，然后添加SSH key，将刚才复制的内容粘贴到输入框中。  </p><center><img src="/archives/23a361ef/5.png" class=""></center>测试一下设置是否成功。在git bash中输入:<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>然后输入yes，显示成功信息：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Warning: Permanently added 'github.com,52.74.223.119' (RSA) to the list of known hosts.</span><br><span class="line">Hi scarletmjy! You've successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure><h3 id="6-远程部署配置"><a href="#6-远程部署配置" class="headerlink" title="6. 远程部署配置"></a>6. 远程部署配置</h3><p>打开_config.yml，找到deploy，并在该位置键入：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">repo:</span> <span class="string">git@github.com:username/username.github.io.git</span></span><br><span class="line"><span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>安装远程deploy的工具:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>使用命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo generate #hexo g</span><br><span class="line">hexo deploy   #hexo d</span><br></pre></td></tr></table></figure><p>将项目push到github上。<br>或者直接使用复合命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d -g</span><br></pre></td></tr></table></figure><p>然后打开链接：<a href="https://your_username.github.io，就可以看到刚刚部署的博客啦。" target="_blank" rel="noopener">https://your_username.github.io，就可以看到刚刚部署的博客啦。</a>  </p><p><strong>参考</strong>：<br><a href="https://www.jianshu.com/p/343934573342" target="_blank" rel="noopener">在windows下安装hexo</a></p><p> <a href="https://zhuanlan.zhihu.com/p/24019875" target="_blank" rel="noopener">【超简单】Windows下使用GitHub + Hexo搭建技术博客</a></p><p> <a href="https://blog.csdn.net/poem_of_sunshine/article/details/29369785" target="_blank" rel="noopener">如何搭建一个独立博客——简明Github Pages与Hexo教程</a></p><p> <a href="https://hexo.io/docs" target="_blank" rel="noopener">hexo官方文档</a></p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>建站</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/archives/4a17b156.html"/>
    <url>/archives/4a17b156.html</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
